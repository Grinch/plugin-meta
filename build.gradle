plugins {
    id 'java'

    id 'eclipse'
    id 'idea'

    id 'maven'
    id 'nebula.provided-base' version '3.0.3'

    id 'net.minecrell.licenser' version '0.1.3'
}

group = 'org.spongepowered'
version = '0.1-SNAPSHOT'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.guava:guava:17.0'
    compile 'com.google.code.gson:gson:2.2.4'

    provided 'com.google.code.findbugs:jsr305:1.3.9'
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourceJar
}

license {
    header = file('HEADER.txt')
    ext {
        name = project.name
        organization = project.organization
        url = project.url
    }
}

// Support uploading with FTP
configurations {
    deployerJars // Deployment dependency
}

dependencies {
    deployerJars 'org.apache.maven.wagon:wagon-ftp:2.10'
}

uploadArchives {
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars

            // This is set by the build server when deploying to the repo
            if (project.hasProperty('spongeRepo')) {
                repository(url: project.spongeRepo) {
                    if (project.hasProperty('spongeUsername') && project.hasProperty('spongePassword')) {
                        authentication(userName: project.spongeUsername, password: project.spongePassword)
                    }
                }
            }

            pom {
                artifactId = project.archivesBaseName

                project {
                    name = project.archivesBaseName
                    description = project.description
                    packaging = 'jar'
                    url = project.url

                    scm {
                        url = "https://github.com/$project.organization/$project.name"
                        connection = "scm:git:https://github.com/$project.organization/${project.name}.git"
                        developerConnection = "scm:git:git@github.com:$project.organization/${project.name}.git"
                    }

                    issueManagement {
                        system = 'GitHub Issues'
                        url = "https://github.com/$project.organization/$project.name/issues"
                    }

                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'http://opensource.org/licenses/MIT'
                            distribution = 'repo'
                        }
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}
